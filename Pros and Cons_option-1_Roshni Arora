Option-1 
Pros:
1. Simple Integration: Simple integration with a range of platforms, frameworks, and programming languages is offered by Auth0.
It provides libraries and SDKs for widely used languages and frameworks, which facilitates the integration of authentication into your program.
2. Security: Auth0 manages security features that can be difficult to implement effectively, such as user management, authorization, and authentication.
Because it supports industry-standard protocols like OpenID Connect and OAuth 2.0, your application will have strong security.
3. Scalability: Auth0 may be used for any size application because it
is designed to manage large-scale authentication requirements. Even in high-volume situations, it can effectively manage authentication requests.
4. Personalization: With Auth0, you can fully customize the authentication process, including the login pages, user profiles, password policies, 
and multi-factor authentication. This lets developers customize the authentication process to fit the needs of their applications.
5. Social Identity Providers: Google, Facebook, Twitter, and other social identity providers are just a few of the ones with which Auth0 can be integrated. 
This makes it easier for users to log in and enables them to authenticate into your application using their current social media credentials.

Cons:
1. Cost: Although Auth0 provides a free tier with restricted functionality, larger usage, and more sophisticated features could come at a price.
The cost of employing Auth0's services can be substantial for larger applications or companies with a strong user base.
2. Dependency: Your application becomes dependent on a third-party service when you integrate Auth0 into it. 
The authentication functionality of your application may be impacted by Auth0 outages or service interruptions.
3. Learning Curve: Even though Auth0 tries to make authentication simpler, there is still a learning curve involved in comprehending its settings, features,
and recommended practices. It could take some time for developers to become proficient in using Auth0's features.
4. Customization Complexity: Although Auth0 provides customization options, more work and knowledge may be needed to achieve sophisticated modification requirements.
Developers might have to delve further.
